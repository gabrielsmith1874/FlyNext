version: '3.8'

services:
  afs-db:
    image: postgres:13
    container_name: afs-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: afs_db
    volumes:
      - afs-db-data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    networks:
      - flynext-network

  afs-main:
    build:
      context: ./afs-main
      dockerfile: Dockerfile
    container_name: afs-main
    environment:
      - PORT=3001
      - DATABASE_URL=postgresql://postgres:postgres@afs-db:5432/afs_db
      - NEXT_PUBLIC_AFS_API_KEY=0da1159fbf062d8e8b4650679aa39a7aefbcb6b3f6a455a0acc7345b8fb65a05
    ports:
      - "3001:3001"
    depends_on:
      - afs-db
    networks:
      - flynext-network
    restart: unless-stopped
    command: >
      sh -c "
      npm install &&
      npx prisma generate &&
      npx prisma migrate deploy &&
      node prisma/data/import_agencies.js &&
      node prisma/data/import_data.js &&
      node prisma/data/generate_flights.js &&
      npm start
      "

  flynext-db:
    image: postgres:13
    container_name: flynext-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: flynext_db
    volumes:
      - flynext-db-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - flynext-network

  flynext:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: flynext
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@flynext-db:5432/flynext_db
      - AFS_API_KEY=0da1159fbf062d8e8b4650679aa39a7aefbcb6b3f6a455a0acc7345b8fb65a05
      - AFS_BASE_URL=http://afs-main:3001
      - JWT_SECRET=flynext-secret-key-for-jwt-authentication-2025
      - NEXT_PUBLIC_API_URL=http://localhost:3000
      - NEXT_PUBLIC_AFS_API_KEY=0da1159fbf062d8e8b4650679aa39a7aefbcb6b3f6a455a0acc7345b8fb65a05
      - NEXT_PUBLIC_AFS_BASE_URL=http://afs-main:3001
      - PORT=3000
    ports:
      - "3000:3000"
    depends_on:
      - flynext-db
      - afs-main
    networks:
      - flynext-network
    restart: unless-stopped
    command: >
      sh -c "
      npm install &&
      npx prisma generate &&
      npx prisma db push &&
      until curl -s http://afs-main:3001/api/airports; do
        echo 'Waiting for AFS to be ready...' &&
        sleep 5;
      done &&
      node scripts/fetch-afs-data.js &&
      npm start
      "

networks:
  flynext-network:
    driver: bridge

volumes:
  afs-db-data:
  flynext-db-data: